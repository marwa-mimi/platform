{% extends "/layout/admin-layout.twig" %}

{% block title %} {{parent()}} - Espace Administrateur{% endblock title %}

{% block content %}
    <div class="row-fluid">
        <div class="span12 well" style="min-height: 585px">
            <div class="row-fluid">
                <ul class="nav nav-pills border">
                    <li class="pull-left"><h3>Espace Administrateur</h3></li>
                </ul>
                    <ul class="nav nav-pills" style="border-bottom: 1px solid #cccccc">
                        <li class="pull-left"><h4>Statistique</h4></li>
                   </ul>
                    <div class="row">
            <div class="span11">
                <div class=" span10 offset2 well" style="background-color: rgb(250, 250, 250);box-shadow: 0px 0px 7px rgb(189, 186, 186);">
                <div id='awesome-graph' class='graph' style='width: 770px; height: 300px;'></div>
                </div>
            </div>
            </div>
             </div>       
        </div>
   </div>
    {% endblock content %}
  {% block js %}
    {#js statistique#}
    <script type="text/javascript" src="{{base_url()}}assets/js/raphael.js"></script>
    <script type="text/javascript" src="{{base_url()}}assets/js/jquery.enumerable.js"></script>
    <script type="text/javascript" src="{{base_url()}}assets/js/jquery.tufte-graph.js"></script>
    <script type="text/javascript">
     $(document).ready(function () {
        jQuery('#awesome-graph').tufteBar({
        data: [ 
          [{{nbclientinscri}}, {label: 'Client Inscri'}],
          [{{nbcomminscri}}, {label: 'Commercant Inscri'}],
          [{{nbclientconfirm}}, {label: 'Client Confirmé'}],
          [{{nbcommconfirm}}, {label: 'Commercant Confirmé'}],
          [{{nbcommenable}}, {label: 'Commercant En attente'}],

        ],
        barWidth: 0.4, 
        barLabel:  function(index) { 
          return $.tufteBar.formatNumber(this[0]) //+ 'x' 
        }, 
        
        axisLabel: function(index) { return this[1].label }, 
        color:     function(index) { 
          return ['rgb(117, 1, 6)', '#82293B'][index % 2] 
        },
        color:     function(index, stackedIndex) { 
          return ['rgb(3, 51, 136)', '#82293B'][stackedIndex % 2] 
        },
        colors: ['#82293B', 'rgb(3, 51, 136)', '#FFBE33'],
      });
    });
    </script> 
{% endblock js %}
